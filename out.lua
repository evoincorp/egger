-- This file was obfuscated by ironbrew-2024; https://github.com/TheGreatSageEqualToHeaven/ironbrew-2024/

 local bt, QK, Hk, b, l, zP, s, ZJ, d, H, Qz, M, dC, D, m, tU, JM, n, uS, Y, Ld, Yw, Ai, Z, zW, vm, nR, Nq, K, t, Ze, jM, Jh, u, JA, W
local F = 0
while true do
    if F <= 1 then
        if F < 1 then
            F = 3
            bt, Qz, D, M, vm, tU, Yw, m, W, H, l, nR = string.byte, string.char, string.sub, string.gsub, table.concat, math.ldexp, getfenv or function()
                return _ENV
            end, setmetatable, select, unpack or table.unpack, tonumber, type
        else
            F = 2
            ZJ = M(D(JM, 8, #JM), '..', function(M)
                return Qz(l(M, 16))
            end)
        end
    else
        if F >= 3 then
            if F > 3 then
                F = 1
                JM = 'IB2024|
            else
                F = 4
                Y = { ... }
            end
        else
            break
        end
    end
end
local l = 1
while true do
    if l >= 2 then
        if l >= 3 then
            if l == 3 then
                l = 0
                zW = { 94, 113, 139, 2047, 91, 220, 29, 93, 204, 131, 74, 8, 146, 18, "__newindex", 126, 251, 9, 88, 11, 144, 38, 148, 107, 44, 56, 35, 178, "_ENV", 31, 119, 168, 158, 65, 1023, 104, 24, 145, 197, 90, 26, 234, 137, 190, 206, "CONSTANT_TABLE_REPLACE", 68, 13, 179, 47, 14, 100, 115, 249, 143, 241, 237, 188, 193, "ldexp", 239, "__tostring", 7, 62, 217, "__iter", 34, 227, 16777216, 79, 69, 30, 76, 45, 124, "bxor", 248, 114, 162, 102, "table", 214, true, 22, 136, 229, 164, 12, 67, 1048575, 95, 147, 58, 216, 142, 54, 72, 128, 122, 43, 4, 253, -1, 57, 23, "__index", 195, 245, 55, 154, 75, 200, "A", 192, 53, 92, 222, 134, 189, 198, "bit", 252, 81, 110, 89, 66, 163, 17, 52, 152, 123, "getfenv", 84, 28, 109, 60, 39, 46, 240, 212, 185, 20, 6, 159, 226, 141, 101, 73, 15, 151, 218, 228, 174, 49, 138, "gsub", 215, 247, 27, 85, 120, 77, "..", 4294967296, 157, "concat", 36, "setmetatable", "string", 242, 103, 129, 96, 140, 186, 243, 244, 172, "unpack", 106, 50, 233, 42, 127, 116, 82, 98, 167, 256, 121, "sub", 4294967295, 196, 202, 231, 108, 224, 51, 205, 207, 199, 181, 149, 117, 165, 65536, 191, 230, 33, 175, 156, 177, 4503599627370496, 223, 166, 25, "char", 180, 160, 254, 70, 246, "pairs", 187, 133, 153, 238, 130, 203, 183, 86, 118, 211, 71, 64, 255, 236, 210, 125, 173, 78, 111, 112, 16, 83, 21, "type", 40, 5, 176, false, 0, "tonumber", 3, 132, 161, 171, 41, 221, 235, 208, 150, 61, 37, 232, "byte", 219, 225, 87, "select", "math", 201, 80, 2, 170, 213, 99, 169, 10, 105, 63, 155, 48, 184, 32, 194, 182, 1, 250, "#", 59, "", 135, 209, 19, 97 }
            else
                l = 2
                u = bit and bit.bxor or function(M, tU)
                    M = M % 4294967295
                    tU = tU % 4294967295
                    local JM, Y = 0, 1
                    while M > 0 and tU > 0 do
                        local zW, F = M % 16, tU % 16
                        JM = JM + n[zW + 1][F + 1] * Y
                        M = (M - zW) / 16
                        tU = (tU - F) / 16
                        Y = Y * 16
                    end
                    JM = JM + M * Y + tU * Y
                    return JM
                end
            end
        else
            l = 3
            uS = function(M, tU, JM)
                if JM then
                    local JM = (M / 2 ^ (tU - 1)) % 2 ^ ((JM - 1) - (tU - 1) + 1);
                    return JM - JM % 1;
                else
                    local tU = 2 ^ (tU - 1);
                    return (M % (tU + tU) >= tU) and 1 or 0;
                end;
            end
        end
    else
        if l > 0 then
            l = 4
            n = { { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, }, { 1, 0, 3, 2, 5, 4, 7, 6, 9, 8, 11, 10, 13, 12, 15, 14, }, { 2, 3, 0, 1, 6, 7, 4, 5, 10, 11, 8, 9, 14, 15, 12, 13, }, { 3, 2, 1, 0, 7, 6, 5, 4, 11, 10, 9, 8, 15, 14, 13, 12, }, { 4, 5, 6, 7, 0, 1, 2, 3, 12, 13, 14, 15, 8, 9, 10, 11, }, { 5, 4, 7, 6, 1, 0, 3, 2, 13, 12, 15, 14, 9, 8, 11, 10, }, { 6, 7, 4, 5, 2, 3, 0, 1, 14, 15, 12, 13, 10, 11, 8, 9, }, { 7, 6, 5, 4, 3, 2, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, }, { 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 4, 5, 6, 7, }, { 9, 8, 11, 10, 13, 12, 15, 14, 1, 0, 3, 2, 5, 4, 7, 6, }, { 10, 11, 8, 9, 14, 15, 12, 13, 2, 3, 0, 1, 6, 7, 4, 5, }, { 11, 10, 9, 8, 15, 14, 13, 12, 3, 2, 1, 0, 7, 6, 5, 4, }, { 12, 13, 14, 15, 8, 9, 10, 11, 4, 5, 6, 7, 0, 1, 2, 3, }, { 13, 12, 15, 14, 9, 8, 11, 10, 5, 4, 7, 6, 1, 0, 3, 2, }, { 14, 15, 12, 13, 10, 11, 8, 9, 6, 7, 4, 5, 2, 3, 0, 1, }, { 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, }, }
        else
            break
        end
    end
end
local l = 1
while true do
    if l <= 1 then
        if l ~= 1 then
            l = 4
            Ze = function()
                local M
                local tU = 2
                while true do
                    if tU <= 1 then
                        if tU < 1 then
                            tU = 1
                            Nq = Nq + 1;
                        else
                            tU = 3
                            return M;
                        end
                    else
                        if tU ~= 2 then
                            break
                        else
                            tU = 0
                            M = u(bt(ZJ, Nq, Nq), Ld)
                        end
                    end
                end
            end
        else
            l = 3
            Ld = 193
        end
    else
        if l <= 2 then
            l = 0
            K = function()
                local M, tU, JM, n
                local Y = 2
                while true do
                    if Y >= 2 then
                        if Y >= 3 then
                            if Y ~= 3 then
                                break
                            else
                                Y = 1
                                JM = u(JM, Ld)
                            end
                        else
                            Y = 0
                            n, JM, tU, M = bt(ZJ, Nq, Nq + 3)
                        end
                    else
                        if Y > 0 then
                            Y = 4
                            tU = u(tU, Ld)
                        else
                            Y = 3
                            n = u(n, Ld)
                        end
                    end
                end
                local Y = 3
                while true do
                    if Y >= 2 then
                        if Y > 2 then
                            Y = 2
                            M = u(M, Ld)
                        else
                            Y = 1
                            Nq = Nq + 4;
                        end
                    else
                        if Y >= 1 then
                            Y = 0
                            return (M * 16777216) + (tU * 65536) + (JM * 256) + n;
                        else
                            break
                        end
                    end
                end
            end
        else
            if l ~= 3 then
                break
            else
                l = 2
                Nq = 1
            end
        end
    end
end
local l = 3
while true do
    if l <= 1 then
        if l ~= 0 then
            break
        else
            l = 4
            JA = function()
                return m({}, {
                    ['\95\95\105\110\100\101\120'] = function()
                        while true do
                        end
                    end,
                    ['\95\95\110\101\119\105\110\100\101\120'] = function()
                        while true do
                        end
                    end,
                    ['\95\95\116\111\115\116\114\105\110\103'] = function()
                        while true do
                        end
                    end,
                    ['\95\95\105\116\101\114'] = function()
                        while true do
                        end
                    end,
                })
            end
        end
    else
        if l >= 3 then
            if l >= 4 then
                l = 2
                dC = 191
            else
                l = 0
                d = function()
                    local M, m, tU, JM, n, Y
                    local zW = 0
                    while true do
                        if zW <= 1 then
                            if zW >= 1 then
                                zW = 4
                                tU = 1
                            else
                                zW = 2
                                M, m = K(), K()
                            end
                        else
                            if zW >= 3 then
                                if zW ~= 3 then
                                    zW = 3
                                    Y = (uS(m, 1, 20) * (4294967296)) + M
                                else
                                    break
                                end
                            else
                                zW = 1
                                if M == 0 and m == 0 then
                                    return 0;
                                end;
                            end
                        end
                    end
                    local M = 3
                    while true do
                        if M <= 1 then
                            if M > 0 then
                                break
                            else
                                M = 2
                                if (JM == 0) then
                                    if (Y == 0) then
                                        return n * 0;
                                    else
                                        JM = 1;
                                        tU = 0;
                                    end;
                                elseif (JM == 2047) then
                                    if (Y == 0) then
                                        return n * (1 / 0);
                                    else
                                        return n * (0 / 0);
                                    end;
                                end;
                            end
                        else
                            if M >= 3 then
                                if M < 4 then
                                    M = 4
                                    JM = uS(m, 21, 31)
                                else
                                    M = 0
                                    n = ((-1) ^ uS(m, 32))
                                end
                            else
                                M = 1
                                return n * 2 ^ (JM - 1023) * (tU + (Y / (4503599627370496)))
                            end
                        end
                    end
                end
            end
        else
            l = 1
            Ai = K
        end
    end
end
local l = 1
while true do
    if l >= 2 then
        if l <= 2 then
            l = 4
            t = K
        else
            if l ~= 3 then
                l = 3
                Z = function(...)
                    return { ... }, W('#', ...)
                end
            else
                l = 0
                Hk = function(M)
                    local m
                    local tU = 1
                    while true do
                        if tU <= 1 then
                            if tU >= 1 then
                                tU = 3
                                m = {}
                            else
                                tU = 2
                                return m
                            end
                        else
                            if tU ~= 3 then
                                break
                            else
                                tU = 0
                                for tU, JM in M do
                                    if nR(JM) == 'table' then
                                        m[tU] = Hk(JM)
                                    else
                                        m[tU] = Hk(JM)
                                    end
                                end
                            end
                        end
                    end
                end
            end
        end
    else
        if l < 1 then
            break
        else
            l = 2
            s = function(Hk)
                local l, M
                local m = 2
                while true do
                    if m <= 1 then
                        if m < 1 then
                            m = 3
                            Nq = Nq + Hk;
                        else
                            m = 0
                            l = D(ZJ, Nq, Nq + Hk - 1);
                        end
                    else
                        if m <= 2 then
                            m = 4
                            l = nil
                        else
                            if m ~= 3 then
                                m = 1
                                if (not Hk) then
                                    Hk = Ai();
                                    if (Hk == 0) then
                                        return '';
                                    end;
                                end;
                            else
                                break
                            end
                        end
                    end
                end
                local Hk = 0
                while true do
                    if Hk >= 2 then
                        if Hk <= 2 then
                            Hk = 1
                            for ZJ = 1, #l do
                                M[ZJ] = Qz(u(bt(D(l, ZJ, ZJ)), Ld))
                            end
                        else
                            break
                        end
                    else
                        if Hk ~= 1 then
                            Hk = 2
                            M = {}
                        else
                            Hk = 3
                            return vm(M);
                        end
                    end
                end
            end
        end
    end
end
local bt = 1
while true do
    if bt <= 1 then
        if bt < 1 then
            bt = 2
            Jh = { [6] = { [-2] = {}, [-3] = dC }, [54] = { [-3] = dC, [-2] = {} }, [65] = { [-3] = dC, [-2] = {} }, [28] = { [-3] = dC, [-2] = {} }, [39] = { [-3] = dC, [-2] = {} }, [38] = { [-3] = dC, [-2] = {} }, [53] = { [-3] = dC, [-2] = {} }, [44] = { [-2] = {}, [-3] = dC }, [30] = { [-3] = dC, [-2] = {} }, [8] = { [-2] = {}, [-3] = dC }, [3] = { [-3] = dC, [-2] = {} }, [45] = { [-2] = {}, [-3] = dC }, [58] = { [-2] = {}, [-3] = dC }, [51] = { [-2] = {}, [-3] = dC }, [27] = { [-2] = {}, [-3] = dC }, [52] = { [-3] = dC, [-2] = {} }, [25] = { [-3] = dC, [-2] = {} }, [26] = { [-2] = {}, [-3] = dC }, [63] = { [-2] = {}, [-3] = dC }, [49] = { [-3] = dC, [-2] = {} }, [40] = { [-3] = dC, [-2] = {} }, [4] = { [-2] = {}, [-3] = dC }, [14] = { [-2] = {}, [-3] = dC }, [47] = { [-2] = {}, [-3] = dC }, [59] = { [-2] = {}, [-3] = dC }, [64] = { [-3] = dC, [-2] = {} }, [43] = { [-2] = {}, [-3] = dC }, [37] = { [-2] = {}, [-3] = dC }, [56] = { [-2] = {}, [-3] = dC }, [32] = { [-3] = dC, [-2] = {} }, [9] = { [-2] = {}, [-3] = dC }, [10] = { [-2] = {}, [-3] = dC }, [61] = { [-3] = dC, [-2] = {} }, [29] = { [-2] = {}, [-3] = dC }, [50] = { [-2] = {}, [-3] = dC }, [1] = { [-3] = dC, [-2] = {} }, [31] = { [-3] = dC, [-2] = {} }, [60] = { [-3] = dC, [-2] = {} }, [19] = { [-2] = {}, [-3] = dC }, [21] = { [-3] = dC, [-2] = {} }, [18] = { [-3] = dC, [-2] = {} }, [62] = { [-3] = dC, [-2] = {} }, [13] = { [-2] = {}, [-3] = dC }, [16] = { [-3] = dC, [-2] = {} }, [36] = { [-3] = dC, [-2] = {} }, [48] = { [-2] = {}, [-3] = dC }, [11] = { [-2] = {}, [-3] = dC }, [46] = { [-3] = dC, [-2] = {} }, [17] = { [-2] = {}, [-3] = dC }, [34] = { [-3] = dC, [-2] = {} }, [55] = { [-3] = dC, [-2] = {} }, [33] = { [-3] = dC, [-2] = {} }, [12] = { [-2] = {}, [-3] = dC }, [42] = { [-2] = {}, [-3] = dC }, [24] = { [-2] = {}, [-3] = dC }, [2] = { [-2] = {}, [-3] = dC }, [23] = { [-3] = dC, [-2] = {} }, [41] = { [-3] = dC, [-2] = {} }, [22] = { [-2] = {}, [-3] = dC }, [20] = { [-3] = dC, [-2] = {} }, [15] = { [-3] = dC, [-2] = {} }, [7] = { [-3] = dC, [-2] = {} }, [66] = { [-3] = dC, [-2] = {} }, [5] = { [-2] = {}, [-3] = dC }, [57] = { [-3] = dC, [-2] = {} }, [35] = { [-3] = dC, [-2] = {} } }
        else
            bt = 4
            zP = function()
                local Hk, l, ZJ, Qz, M, dC
                local D = 0
                while true do
                    if D >= 2 then
                        if D <= 2 then
                            D = 3
                            l = { Hk, nil, dC, nil, ZJ, {} }
                        else
                            if D <= 3 then
                                break
                            else
                                D = 2
                                ZJ = {}
                            end
                        end
                    else
                        if D >= 1 then
                            D = 4
                            dC = {}
                        else
                            D = 1
                            Hk = {}
                        end
                    end
                end
                local ZJ = 2
                while true do
                    if ZJ <= 1 then
                        if ZJ == 0 then
                            ZJ = 1
                            for D = 1, K() do
                                dC[D - 1] = zP();
                            end
                        else
                            ZJ = 3
                            Qz = K()
                        end
                    else
                        if ZJ <= 2 then
                            ZJ = 4
                            for dC = 1, K() do
                                local D, m, tU, JM, n
                                local Y = 4
                                while true do
                                    if Y >= 2 then
                                        if Y >= 3 then
                                            if Y ~= 4 then
                                                Y = 0
                                                n = u(K(), 88)
                                            else
                                                Y = 3
                                                m = u(K(), 101)
                                            end
                                        else
                                            Y = 1
                                            tU = uS(n, 1, 11)
                                        end
                                    else
                                        if Y > 0 then
                                            break
                                        else
                                            Y = 2
                                            JM = uS(m, 1, 2)
                                        end
                                    end
                                end
                                local Y = 3
                                while true do
                                    if Y <= 1 then
                                        if Y == 1 then
                                            Y = 2
                                            D[22] = uS(m, 3, 11)
                                        else
                                            break
                                        end
                                    else
                                        if Y <= 2 then
                                            Y = 0
                                            D[179] = n
                                        else
                                            if Y >= 4 then
                                                Y = 1
                                                D[191] = tU
                                            else
                                                Y = 4
                                                D = {}
                                            end
                                        end
                                    end
                                end
                                local tU = 2
                                while true do
                                    if tU <= 0 then
                                        break
                                    else
                                        if tU <= 1 then
                                            tU = 0
                                            Hk[dC] = D;
                                        else
                                            tU = 1
                                            if (JM == 0) then
                                                D[124] = uS(m, 12, 20);
                                                D[13] = uS(m, 21, 29);
                                            elseif (JM == 1) then
                                                D[124] = uS(n, 12, 33);
                                            elseif (JM == 2) then
                                                D[124] = uS(n, 12, 32) - 1048575;
                                            elseif (JM == 3) then
                                                D[124] = uS(n, 12, 32) - 1048575;
                                                D[13] = uS(m, 21, 29);
                                            end;
                                        end
                                    end
                                end
                            end
                        else
                            if ZJ > 3 then
                                ZJ = 0
                                l[4] = Ze();
                            else
                                break
                            end
                        end
                    end
                end
                local Hk = 1
                while true do
                    if Hk >= 2 then
                        if Hk <= 2 then
                            Hk = 4
                            l[2] = M
                        else
                            if Hk > 3 then
                                Hk = 0
                                return l;
                            else
                                Hk = 2
                                for l = 1, Qz do
                                    local ZJ, Qz
                                    local dC = 1
                                    while true do
                                        if dC >= 2 then
                                            if dC <= 2 then
                                                dC = 4
                                                if (Qz == 1) then
                                                    ZJ = (Ze() ~= 0);
                                                elseif (Qz == 2) then
                                                    ZJ = d();
                                                elseif (Qz == 0) then
                                                    if Ze() == 1 then
                                                        ZJ = JA()
                                                    else
                                                        ZJ = s()
                                                    end;
                                                end;
                                            else
                                                if dC ~= 3 then
                                                    dC = 3
                                                    M[l] = ZJ;
                                                else
                                                    break
                                                end
                                            end
                                        else
                                            if dC == 0 then
                                                dC = 2
                                                ZJ = nil
                                            else
                                                dC = 0
                                                Qz = Ze()
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    else
                        if Hk == 1 then
                            Hk = 3
                            M = {}
                        else
                            break
                        end
                    end
                end
            end
        end
    else
        if bt >= 3 then
            if bt == 4 then
                bt = 3
                jM = { [181] = u(169, 99), [42] = u(93, 185), [234] = u(59, 190), [206] = u(6, 248), [117] = u(23, 149), [30] = u(97, 92), [130] = u(100, 24), [194] = u(127, 174), [77] = u(42, 225), [36] = u(214, 79), [220] = u(241, 173), [149] = u(209, 102), [162] = u(43, 218), [40] = u(38, 152), [88] = u(194, 250), [213] = u(192, 238), [51] = u(26, 55), [33] = u(32, 251), [121] = u(200, 187), [31] = u(168, 205), [240] = u(133, 255), [27] = u(240, 34), [153] = u(174, 160), [72] = u(22, 176), [131] = u(126, 122), [99] = u(186, 231), [159] = u(233, 66), [150] = u(94, 211), [114] = u(245, 149), [223] = u(28, 180), [172] = u(75, 149), [52] = u(76, 226), [67] = u(37, 231), [87] = u(162, 242), [204] = u(15, 216), [221] = u(146, 111), [25] = u(154, 177), [89] = u(160, 66), [128] = u(222, 229), [64] = u(148, 15), [202] = u(155, 214), [224] = u(141, 185), [95] = u(184, 162), [9] = u(190, 48), [218] = u(86, 130), [152] = u(136, 107), [230] = u(142, 201), [124] = u(150, 196), [217] = u(106, 245), [17] = u(48, 86), [252] = u(168, 84), [41] = u(103, 51), [143] = u(154, 146), [81] = u(113, 150), [54] = u(61, 203), [148] = u(163, 172), [155] = u(39, 253), [34] = u(240, 249), [238] = u(223, 6), [158] = u(51, 211), [197] = u(132, 204), [103] = u(67, 45), [11] = u(22, 169), [163] = u(127, 196), [84] = u(66, 173), [14] = u(211, 187), [134] = u(88, 112), [191] = u(116, 24), [184] = u(235, 71), [104] = u(52, 127), [199] = u(102, 74), [244] = u(1, 102), [177] = u(200, 141), [173] = u(199, 214), [253] = u(79, 28), [132] = u(156, 16), [190] = u(188, 1), [20] = u(1, 172), [43] = u(188, 149), [58] = u(47, 191), [8] = u(108, 37), [136] = u(84, 202), [56] = u(234, 55), [62] = u(139, 172), [111] = u(227, 135), [97] = u(52, 68), [226] = u(175, 208), [102] = u(145, 71), [116] = u(76, 87), [174] = u(245, 218), [236] = u(98, 64), [254] = u(245, 125), [29] = u(49, 186), [123] = u(169, 144), [144] = u(201, 8), [186] = u(4, 49), [74] = u(207, 186), [205] = u(241, 102), [32] = u(113, 97), [246] = u(119, 162), [90] = u(220, 194), [49] = u(42, 87), [1] = u(54, 6), [10] = u(100, 161), [66] = u(29, 71), [187] = u(99, 56), [106] = u(7, 193), [216] = u(15, 101), [109] = u(192, 53), [92] = u(227, 112), [237] = u(170, 236), [249] = u(176, 168), [94] = u(81, 170), [46] = u(65, 127), [164] = u(188, 176), [228] = u(78, 31), [98] = u(222, 191), [147] = u(72, 78), [200] = u(96, 167), [171] = u(69, 172), [209] = u(207, 248), [65] = u(138, 156), [105] = u(43, 63), [7] = u(9, 126), [119] = u(161, 190), [225] = u(213, 79), [70] = u(135, 108), [166] = u(6, 154), [247] = u(171, 184), [44] = u(219, 107), [61] = u(181, 206), [189] = u(190, 181), [112] = u(59, 248), [165] = u(154, 41), [15] = u(44, 153), [215] = u(59, 246), [185] = u(72, 204), [233] = u(83, 185), [146] = u(76, 148), [63] = u(21, 87), [167] = u(255, 92), [22] = u(77, 47), [28] = u(247, 212), [3] = u(229, 44), [57] = u(63, 162), [156] = u(25, 85), [35] = u(88, 144), [120] = u(162, 232), [142] = u(180, 103), [222] = u(222, 79), [21] = u(234, 75), [245] = u(190, 110), [24] = u(137, 184), [255] = u(173, 196), [79] = u(130, 194), [85] = u(160, 249), [78] = u(152, 162), [145] = u(248, 221), [182] = u(12, 51), [125] = u(89, 150), [82] = u(172, 98), [242] = u(68, 209), [101] = u(140, 100), [161] = u(80, 168), [60] = u(183, 69), [227] = u(247, 51), [195] = u(124, 253), [219] = u(30, 7), [231] = u(205, 123), [160] = u(24, 115), [203] = u(188, 200), [250] = u(97, 34), [229] = u(186, 67), [93] = u(160, 129), [201] = u(177, 155), [232] = u(23, 189), [198] = u(236, 237), [243] = u(133, 42), [157] = u(223, 178), [71] = u(253, 206), [193] = u(222, 45), [138] = u(233, 228), [118] = u(112, 200), [100] = u(225, 15), [59] = u(22, 117), [23] = u(102, 34), [86] = u(98, 27), [26] = u(169, 198), [38] = u(237, 68), [19] = u(180, 8), [127] = u(149, 159), [16] = u(60, 142), [37] = u(216, 24), [6] = u(44, 136), [214] = u(96, 239), [2] = u(59, 215), [170] = u(20, 74), [68] = u(20, 98), [83] = u(72, 74), [13] = u(146, 143), [50] = u(45, 148), [140] = u(111, 83), [12] = u(143, 175), [69] = u(160, 87), [175] = u(179, 164), [4] = u(215, 165), [211] = u(9, 137), [108] = u(13, 247), [168] = u(109, 28), [115] = u(1, 94), [141] = u(60, 14), [241] = u(135, 210), [192] = u(222, 166), [110] = u(211, 132), [75] = u(84, 139), [129] = u(108, 112), [196] = u(25, 47), [151] = u(3, 132), [5] = u(150, 90), [239] = u(109, 220), [73] = u(211, 65), [80] = u(0, 148), [122] = u(163, 4), [210] = u(188, 154), [139] = u(93, 231), [208] = u(68, 96), [53] = u(184, 71), [179] = u(3, 149), [183] = u(141, 7), [176] = u(145, 101), [96] = u(165, 5), [45] = u(75, 53), [251] = u(13, 132), [133] = u(171, 185), [47] = u(254, 74), [212] = u(7, 70), [113] = u(158, 60), [91] = u(128, 102), [126] = u(117, 208), [18] = u(45, 174), [39] = u(95, 217), [248] = u(35, 38), [76] = u(4, 3), [169] = u(180, 89), [180] = u(109, 59), [207] = u(8, 248), [107] = u(216, 64), [178] = u(190, 171), [188] = u(47, 96), [48] = u(89, 184), [135] = u(6, 72), [154] = u(77, 145), [235] = u(127, 39), [137] = u(213, 48), [55] = u(86, 85) }
            else
                bt = 0
                QK = {}
            end
        else
            break
        end
    end
end
local bt = 2
while true do
    if bt <= 0 then
        break
    else
        if bt <= 1 then
            bt = 0
            return b(zP(), {})(...);
        else
            bt = 1
            b = function(bt, Hk)
                local l;
                local zP;
                local s = bt[1];
                local ZJ;
                return function(...)
                    local d;
                    local Qz;
                    local M;
                    local dC = 1;
                    local D;
                    local m;
                    local tU;
                    local JM;
                    local n;
                    local uS;
                    local Y;
                    while true do
                        n = s[dC];
                        D = n[191];
                        if (D == jM[170] or D < jM[170]) then
                            if D >= 47 then
                                if (D > 71 or D == 71) then
                                    if (D >= jM[253]) then
                                        if (D == jM[235] or D < jM[235]) then
                                            if (D > 86 or D == 86) then
                                                if (D > jM[110] or D == jM[110]) then
                                                    if (D >= jM[235]) then
                                                        local Ld = Y[n[124]];
                                                        if Ld then
                                                            dC = (dC + 1);
                                                        else
                                                            Y[n[22]] = Ld;
                                                            dC = (dC + s[dC + 1][124] + 1);
                                                        end;
                                                    else
                                                        Y[n[13]] = Y[n[22]](Y[n[124]]);
                                                    end
                                                else
                                                    local Ld, Ld, Ai, zW, vm, nR
                                                    local Nq = 1
                                                    while true do
                                                        if (Nq == 1 or Nq < 1) then
                                                            if (Nq > 0) then
                                                                Nq = 3
                                                                vm = n[13]
                                                            else
                                                                Nq = 2
                                                                zW = ((vm + n[22]) - 1)
                                                            end
                                                        else
                                                            if (Nq == 2 or Nq < 2) then
                                                                break
                                                            else
                                                                if (Nq > 3) then
                                                                    Nq = 0
                                                                    Ld = 0
                                                                else
                                                                    Nq = 4
                                                                    Ai = {}
                                                                end
                                                            end
                                                        end
                                                    end
                                                    local Nq = 4
                                                    while true do
                                                        if (Nq == 1 or Nq < 1) then
                                                            if Nq ~= 0 then
                                                                break
                                                            else
                                                                Nq = 1
                                                                Ld = 0;
                                                            end
                                                        else
                                                            if (Nq == 3 or Nq > 3) then
                                                                if not (Nq ~= 3) then
                                                                    Nq = 0
                                                                    zW = vm + n[124] - 2
                                                                else
                                                                    Nq = 2
                                                                    for K = (vm + 1), zW do
                                                                        Ld = Ld + 1;
                                                                        Ai[Ld] = Y[K];
                                                                    end;
                                                                end
                                                            else
                                                                Nq = 3
                                                                nR = { Y[vm](H(Ai, 1, (zW - vm))) }
                                                            end
                                                        end
                                                    end
                                                    local Ai = 1
                                                    while true do
                                                        if (Ai >= 1) then
                                                            if not (Ai == 2) then
                                                                Ai = 2
                                                                for Nq = vm, zW do
                                                                    Ld = (Ld + 1);
                                                                    Y[Nq] = nR[Ld];
                                                                end;
                                                            else
                                                                Ai = 0
                                                                M = zW;
                                                            end
                                                        else
                                                            break
                                                        end
                                                    end
                                                end
                                            else
                                                if (D == jM[41] or D > jM[41]) then
                                                    if (D > 85 or D == 85) then
                                                        Y[n[22]][Y[n[124]]] = n[13];
                                                    else
                                                        local Ld, Ai, zW, vm
                                                        local nR = 2
                                                        while true do
                                                            if (nR < 1 or nR == 1) then
                                                                if nR < 1 then
                                                                    nR = 3
                                                                    Ld = {}
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if (nR == 3 or nR > 3) then
                                                                    if (nR < 3 or nR == 3) then
                                                                        nR = 1
                                                                        vm = 0
                                                                    else
                                                                        nR = 0
                                                                        Ai = M
                                                                    end
                                                                else
                                                                    nR = 4
                                                                    zW = n[22]
                                                                end
                                                            end
                                                        end
                                                        local nR = 0
                                                        while true do
                                                            if (nR == 0 or nR < 0) then
                                                                nR = 1
                                                                for Nq = zW, Ai do
                                                                    vm = (vm + 1);
                                                                    Ld[vm] = Y[Nq];
                                                                end;
                                                            else
                                                                if (nR == 2) then
                                                                    break
                                                                else
                                                                    nR = 2
                                                                    do
                                                                        return H(Ld, 1, vm)
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    end
                                                else
                                                    Y[n[22]] = tU
                                                end
                                            end
                                        else
                                            if (D > 92 or D == 92) then
                                                if (D > 93 or D == 93) then
                                                    if not (D ~= 93) then
                                                        Y[n[13]][ZJ[n[22]]] = Y[n[124]];
                                                    else
                                                        Y[n[22]] = #Y[n[124]];
                                                    end
                                                else
                                                    Y[n[22]] = QK;
                                                end
                                            else
                                                if (D == 89 or D < 89) then
                                                    if (Y[n[124]] < Y[n[13]]) then
                                                        dC = (dC + 1);
                                                    end;
                                                else
                                                    if not (D ~= jM[66]) then
                                                        Y[n[22]] = Y[n[124]][Y[n[13]]];
                                                    else
                                                        do
                                                            return
                                                        end;
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D <= jM[156]) then
                                            if (D > jM[120] or D == jM[120]) then
                                                if (D < jM[120] or D == jM[120]) then
                                                    Y[n[22]] = ZJ;
                                                else
                                                    if not (D == 75) then
                                                        local QK = n[22];
                                                        do
                                                            return Y[QK]();
                                                        end;
                                                    else
                                                        return H(Y[n[22]])
                                                    end
                                                end
                                            else
                                                if (D < 71 or D == 71) then
                                                    local QK, Ld, Ai, zW
                                                    local vm = 2
                                                    while true do
                                                        if (vm < 1 or vm == 1) then
                                                            if (vm > 1 or vm == 1) then
                                                                break
                                                            else
                                                                vm = 1
                                                                Ld = Ai + n[22] - 1
                                                            end
                                                        else
                                                            if (vm == 2 or vm < 2) then
                                                                vm = 4
                                                                Ai = n[124]
                                                            else
                                                                if (vm > 3) then
                                                                    vm = 3
                                                                    zW = {}
                                                                else
                                                                    vm = 0
                                                                    QK = 0
                                                                end
                                                            end
                                                        end
                                                    end
                                                    local vm = 3
                                                    while true do
                                                        if (vm == 1 or vm < 1) then
                                                            if (vm < 1) then
                                                                vm = 1
                                                                M = Ai;
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if (vm == 3) then
                                                                vm = 2
                                                                for nR = (Ai + 1), Ld do
                                                                    QK = (QK + 1);
                                                                    zW[QK] = Y[nR];
                                                                end;
                                                            else
                                                                vm = 0
                                                                Y[Ai](H(zW, 1, (Ld - Ai)));
                                                            end
                                                        end
                                                    end
                                                else
                                                    if (D < 73) then
                                                        local QK, Ld, Ai, zW
                                                        local vm = 0
                                                        while true do
                                                            if (vm == 1 or vm < 1) then
                                                                if not (vm == 1) then
                                                                    vm = 1
                                                                    QK = n[22]
                                                                else
                                                                    vm = 4
                                                                    dC = dC + 1;
                                                                end
                                                            else
                                                                if (vm == 3 or vm > 3) then
                                                                    if not (vm ~= 4) then
                                                                        vm = 3
                                                                        zW = (s[dC][179] - 1) * 50
                                                                    else
                                                                        vm = 2
                                                                        Ld = Y[QK]
                                                                    end
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                        local vm = 2
                                                        while true do
                                                            if (vm == 1 or vm > 1) then
                                                                if (vm > 1) then
                                                                    vm = 1
                                                                    Ai = (M - QK)
                                                                else
                                                                    vm = 0
                                                                    for vm = 1, Ai do
                                                                        Ld[(zW + vm)] = Y[(QK + vm)]
                                                                    end;
                                                                end
                                                            else
                                                                break
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]][ZJ[n[124]]] = Y[n[13]];
                                                    end
                                                end
                                            end
                                        else
                                            if D <= jM[188] then
                                                if D >= jM[135] then
                                                    if (D > jM[135]) then
                                                        if (ZJ[n[124]] < Y[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        if (Y[n[124]] > Y[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    end
                                                else
                                                end
                                            else
                                                if (D > jM[228] or D == jM[228]) then
                                                    if (D > jM[228]) then
                                                        Y[n[22]] = (ZJ[n[124]] ^ Y[n[13]]);
                                                    else
                                                        Y[n[22]][ZJ[n[124]]] = ZJ[n[13]];
                                                    end
                                                else
                                                    l = bt[4]
                                                end
                                            end
                                        end
                                    end
                                else
                                    if (D == 58 or D < 58) then
                                        if (D == 52 or D < 52) then
                                            if (D == jM[141] or D > jM[141]) then
                                                if (D <= jM[141]) then
                                                    Y[n[22]] = (Y[n[124]] / Y[n[13]]);
                                                else
                                                    if not (D == 52) then
                                                        local QK, Ld, Ai
                                                        local zW = 3
                                                        while true do
                                                            if (zW >= 2) then
                                                                if (zW > 3 or zW == 3) then
                                                                    if zW == 4 then
                                                                        zW = 1
                                                                        Ai = Y[QK]
                                                                    else
                                                                        zW = 4
                                                                        QK = n[22]
                                                                    end
                                                                else
                                                                    zW = 0
                                                                    for vm = 1, Ld do
                                                                        Ai[vm] = Y[QK + vm]
                                                                    end;
                                                                end
                                                            else
                                                                if not (zW == 0) then
                                                                    zW = 2
                                                                    Ld = n[124]
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = (Y[n[124]] + Y[n[13]]);
                                                    end
                                                end
                                            else
                                                if (D > jM[1] or D == jM[1]) then
                                                    if not (D == jM[1]) then
                                                        local QK, Ld
                                                        local Ai = 4
                                                        while true do
                                                            if Ai <= 1 then
                                                                if Ai ~= 1 then
                                                                    Ai = 2
                                                                    Y[n[22]] = Ld;
                                                                else
                                                                    Ai = 3
                                                                    Ld = Y[QK]
                                                                end
                                                            else
                                                                if Ai <= 2 then
                                                                    break
                                                                else
                                                                    if (Ai > 4 or Ai == 4) then
                                                                        Ai = 1
                                                                        QK = n[124]
                                                                    else
                                                                        Ai = 0
                                                                        for Ai = (QK + 1), n[13] do
                                                                            Ld = (Ld .. Y[Ai]);
                                                                        end;
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[13]][ZJ[n[22]]] = Y[n[124]];
                                                    end
                                                else
                                                    zP = bt[3]
                                                end
                                            end
                                        else
                                            if (D >= jM[88]) then
                                                if (D == jM[88] or D < jM[88]) then
                                                    Y[n[22]] = Y[n[124]][ZJ[n[13]]];
                                                else
                                                    if D >= 58 then
                                                        Y[n[124]] = Y[n[22]][ZJ[n[13]]];
                                                    else
                                                        local QK, Ld, Ai, zW, vm
                                                        local nR = 2
                                                        while true do
                                                            if (nR == 2 or nR > 2) then
                                                                if (nR == 3 or nR > 3) then
                                                                    if nR == 4 then
                                                                        nR = 3
                                                                        vm = n[13]
                                                                    else
                                                                        nR = 0
                                                                        zW = QK + 2
                                                                    end
                                                                else
                                                                    nR = 4
                                                                    QK = n[22]
                                                                end
                                                            else
                                                                if nR == 1 then
                                                                    break
                                                                else
                                                                    nR = 1
                                                                    Ld = { Y[QK](Y[QK + 1], Y[zW]) }
                                                                end
                                                            end
                                                        end
                                                        local nR = 2
                                                        while true do
                                                            if (nR > 2 or nR == 2) then
                                                                if (nR < 3) then
                                                                    nR = 3
                                                                    for Nq = 1, vm do
                                                                        Y[(zW + Nq)] = Ld[Nq];
                                                                    end;
                                                                else
                                                                    nR = 0
                                                                    Ai = Y[QK + 3]
                                                                end
                                                            else
                                                                if (nR == 1) then
                                                                    break
                                                                else
                                                                    nR = 1
                                                                    if Ai then
                                                                        Y[zW] = Ai
                                                                    else
                                                                        dC = (dC + 1);
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if (D == 54 or D > 54) then
                                                    if not (D ~= jM[209]) then
                                                        local QK, Ld, Ai, zW
                                                        local vm = 1
                                                        while true do
                                                            if (vm == 1 or vm < 1) then
                                                                if (vm > 1 or vm == 1) then
                                                                    vm = 4
                                                                    Ld = n[22]
                                                                else
                                                                    vm = 2
                                                                    QK = n[124]
                                                                end
                                                            else
                                                                if (vm == 2 or vm < 2) then
                                                                    break
                                                                else
                                                                    if (vm > 3) then
                                                                        vm = 3
                                                                        zW = ((n[13] - 1) * 50)
                                                                    else
                                                                        vm = 0
                                                                        Ai = Y[Ld]
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        for vm = 1, QK do
                                                            Ai[(zW + vm)] = Y[(Ld + vm)]
                                                        end;
                                                    else
                                                        Y[n[22]] = Y[n[124]];
                                                    end
                                                else
                                                    for QK = 0, Qz do
                                                        if (QK == l or QK > l) then
                                                            uS[QK - l] = d[(QK + 1)];
                                                        else
                                                            Y[QK] = d[QK + 1];
                                                        end;
                                                    end;
                                                end
                                            end
                                        end
                                    else
                                        if (D == jM[212] or D > jM[212]) then
                                            if (D >= 68) then
                                                if (D == 69 or D > 69) then
                                                    if (D > 69) then
                                                        do
                                                            return
                                                        end;
                                                    else
                                                        Y[n[22]] = (not Y[n[124]]);
                                                    end
                                                else
                                                    Y[n[22]]();
                                                    M = A;
                                                end
                                            else
                                                if (D == jM[212] or D < jM[212]) then
                                                    tU = Yw()
                                                else
                                                    if (D == jM[250] or D > jM[250]) then
                                                        do
                                                            return
                                                        end;
                                                    else
                                                        local QK, Ld, Yw, Ai
                                                        local zW = 2
                                                        while true do
                                                            if (zW == 1 or zW < 1) then
                                                                if zW > 0 then
                                                                    zW = 0
                                                                    QK = 0
                                                                else
                                                                    zW = 4
                                                                    Yw = Ld + n[22] - 1
                                                                end
                                                            else
                                                                if (zW == 3 or zW > 3) then
                                                                    if not (zW ~= 4) then
                                                                        break
                                                                    else
                                                                        zW = 1
                                                                        Ai = {}
                                                                    end
                                                                else
                                                                    zW = 3
                                                                    Ld = n[124]
                                                                end
                                                            end
                                                        end
                                                        local zW = 2
                                                        while true do
                                                            if (zW == 1 or zW < 1) then
                                                                if (zW == 0 or zW < 0) then
                                                                    zW = 1
                                                                    M = Ld;
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if (zW < 3) then
                                                                    zW = 3
                                                                    for vm = (Ld + 1), Yw do
                                                                        QK = (QK + 1);
                                                                        Ai[QK] = Y[vm];
                                                                    end;
                                                                else
                                                                    zW = 0
                                                                    Y[Ld](H(Ai, 1, Yw - Ld));
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        else
                                            if (D <= jM[30]) then
                                                if (D == 59 or D < 59) then
                                                    Y[n[22]] = tU[ZJ[n[124]]];
                                                else
                                                    if not (D ~= jM[30]) then
                                                        Y[n[22]] = Y[n[124]] ^ Y[n[13]];
                                                    else
                                                        local QK, Ld, Yw
                                                        local Ai = 0
                                                        while true do
                                                            if (Ai == 1 or Ai < 1) then
                                                                if (Ai < 0 or Ai == 0) then
                                                                    Ai = 2
                                                                    Yw = n[22]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if (Ai == 2 or Ai < 2) then
                                                                    Ai = 3
                                                                    Ld = Y[(Yw + 2)]
                                                                else
                                                                    if (Ai == 3 or Ai < 3) then
                                                                        Ai = 4
                                                                        QK = Y[Yw] + Ld
                                                                    else
                                                                        Ai = 1
                                                                        Y[Yw] = QK;
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        if (Ld > 0) then
                                                            if (QK == Y[(Yw + 1)] or QK < Y[(Yw + 1)]) then
                                                                dC = dC + n[124];
                                                                Y[Yw + 3] = QK;
                                                            end;
                                                        elseif (QK >= Y[Yw + 1]) then
                                                            dC = (dC + n[124]);
                                                            Y[Yw + 3] = QK;
                                                        end;
                                                    end
                                                end
                                            else
                                                if (D == jM[182] or D > jM[182]) then
                                                    if (D < jM[79]) then
                                                        Y[n[22]] = Y[n[124]] % ZJ[n[13]];
                                                    else
                                                        if (ZJ[n[124]] > Y[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                else
                                                    if (ZJ[n[124]] > ZJ[n[13]]) then
                                                        dC = dC + 1;
                                                    end;
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if (D >= 23) then
                                    if (D >= jM[28]) then
                                        if (D == jM[134] or D < jM[134]) then
                                            if (D == jM[145] or D < jM[145]) then
                                                if (D == jM[28] or D < jM[28]) then
                                                    Y[n[22]] = false;
                                                    dC = (dC + 1);
                                                else
                                                    if D < jM[145] then
                                                        Y[n[22]] = Y[n[124]] % Y[n[13]];
                                                    else
                                                        local QK, Ld, Yw, Ai
                                                        local zW = 3
                                                        while true do
                                                            if zW <= 1 then
                                                                if not (zW ~= 0) then
                                                                    zW = 2
                                                                    Ld = {}
                                                                else
                                                                    zW = 4
                                                                    Ai = M
                                                                end
                                                            else
                                                                if (zW < 2 or zW == 2) then
                                                                    zW = 1
                                                                    QK = 0
                                                                else
                                                                    if not (zW == 3) then
                                                                        break
                                                                    else
                                                                        zW = 0
                                                                        Yw = n[22]
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local zW = 3
                                                        while true do
                                                            if (zW == 2 or zW > 2) then
                                                                if (zW ~= 3) then
                                                                    zW = 1
                                                                    M = Yw;
                                                                else
                                                                    zW = 0
                                                                    for vm = (Yw + 1), Ai do
                                                                        QK = QK + 1;
                                                                        Ld[QK] = Y[vm];
                                                                    end;
                                                                end
                                                            else
                                                                if (zW ~= 0) then
                                                                    break
                                                                else
                                                                    zW = 2
                                                                    Y[Yw](H(Ld, 1, (Ai - Yw)));
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if D <= 38 then
                                                    local QK, Ld, Yw, Ai
                                                    local zW = 1
                                                    while true do
                                                        if (zW == 2 or zW > 2) then
                                                            if (zW > 3 or zW == 3) then
                                                                if zW == 4 then
                                                                    zW = 0
                                                                    QK = (Ai + n[22] - 1)
                                                                else
                                                                    zW = 2
                                                                    Ld = {}
                                                                end
                                                            else
                                                                zW = 4
                                                                Yw = 0
                                                            end
                                                        else
                                                            if not (zW == 1) then
                                                                break
                                                            else
                                                                zW = 3
                                                                Ai = n[13]
                                                            end
                                                        end
                                                    end
                                                    local zW = 3
                                                    while true do
                                                        if (zW < 1 or zW == 1) then
                                                            if (zW == 0) then
                                                                break
                                                            else
                                                                zW = 0
                                                                M = Ai;
                                                            end
                                                        else
                                                            if zW > 2 then
                                                                zW = 2
                                                                for vm = Ai + 1, QK do
                                                                    Yw = (Yw + 1);
                                                                    Ld[Yw] = Y[vm];
                                                                end;
                                                            else
                                                                zW = 1
                                                                Y[Ai](H(Ld, 1, (QK - Ai)));
                                                            end
                                                        end
                                                    end
                                                else
                                                    if D > jM[62] then
                                                        Y[n[124]] = Y[n[22]][ZJ[n[13]]];
                                                    else
                                                        Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                    end
                                                end
                                            end
                                        else
                                            if (D >= 44) then
                                                if (D >= jM[51]) then
                                                    if not (D == jM[51]) then
                                                        Y[n[13]][ZJ[n[22]]] = ZJ[n[124]];
                                                    else
                                                        Y[n[22]] = Y[n[124]] ^ ZJ[n[13]];
                                                    end
                                                else
                                                    local QK = Hk[n[124]];
                                                    QK[1][QK[2]] = Y[n[22]];
                                                end
                                            else
                                                if (D > jM[201] or D == jM[201]) then
                                                    if not (D ~= 43) then
                                                        Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                    else
                                                        Y[n[22]] = (ZJ[n[124]] / Y[n[13]]);
                                                    end
                                                else
                                                    local QK, Ld, Yw, Yw, Ai, zW
                                                    local vm = 3
                                                    while true do
                                                        if (vm == 2 or vm > 2) then
                                                            if (vm >= 3) then
                                                                if (vm == 4 or vm > 4) then
                                                                    break
                                                                else
                                                                    vm = 0
                                                                    Ld = n[13]
                                                                end
                                                            else
                                                                vm = 4
                                                                Yw = ((Ld + n[22]) - 1)
                                                            end
                                                        else
                                                            if not (vm ~= 1) then
                                                                vm = 2
                                                                QK = 0
                                                            else
                                                                vm = 1
                                                                zW = {}
                                                            end
                                                        end
                                                    end
                                                    local vm = 1
                                                    while true do
                                                        if (vm == 2 or vm > 2) then
                                                            if (vm < 2 or vm == 2) then
                                                                break
                                                            else
                                                                if (vm == 3) then
                                                                    vm = 4
                                                                    Ai = { Y[Ld](H(zW, 1, (Yw - Ld))) }
                                                                else
                                                                    vm = 0
                                                                    Yw = Ld + n[124] - 2
                                                                end
                                                            end
                                                        else
                                                            if vm > 0 then
                                                                vm = 3
                                                                for nR = Ld + 1, Yw do
                                                                    QK = QK + 1;
                                                                    zW[QK] = Y[nR];
                                                                end;
                                                            else
                                                                vm = 2
                                                                QK = 0;
                                                            end
                                                        end
                                                    end
                                                    local zW = 0
                                                    while true do
                                                        if (zW == 1 or zW > 1) then
                                                            if zW > 1 then
                                                                break
                                                            else
                                                                zW = 2
                                                                M = Yw;
                                                            end
                                                        else
                                                            zW = 1
                                                            for zW = Ld, Yw do
                                                                QK = (QK + 1);
                                                                Y[zW] = Ai[QK];
                                                            end;
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D > jM[13] or D == jM[13]) then
                                            if (D == jM[12] or D > jM[12]) then
                                                if (D < jM[12] or D == jM[12]) then
                                                    Y[n[22]][Y[n[124]]] = ZJ[n[13]];
                                                else
                                                    if not (D ~= jM[93]) then
                                                        uS = {}
                                                    else
                                                        Y[n[124]] = Y[n[22]][ZJ[n[13]]];
                                                    end
                                                end
                                            else
                                                if (D == jM[90] or D > jM[90]) then
                                                    if not (D ~= jM[90]) then
                                                        Y[n[22]] = {};
                                                    else
                                                        local QK, Ld, Yw, Ai
                                                        local zW = 4
                                                        while true do
                                                            if (zW == 2 or zW > 2) then
                                                                if (zW == 2 or zW < 2) then
                                                                    zW = 1
                                                                    Yw = ((n[13] - 1) * 50)
                                                                else
                                                                    if zW ~= 4 then
                                                                        zW = 0
                                                                        QK = M - Ld
                                                                    else
                                                                        zW = 2
                                                                        Ld = n[22]
                                                                    end
                                                                end
                                                            else
                                                                if (zW > 0) then
                                                                    zW = 3
                                                                    Ai = Y[Ld]
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                        for zW = 1, QK do
                                                            Ai[(Yw + zW)] = Y[Ld + zW]
                                                        end;
                                                    end
                                                else
                                                    local QK
                                                    local Ld = 1
                                                    while true do
                                                        if (Ld == 1 or Ld < 1) then
                                                            if Ld == 0 then
                                                                Ld = 2
                                                                dC = dC + n[124];
                                                            else
                                                                Ld = 3
                                                                QK = n[22]
                                                            end
                                                        else
                                                            if (Ld == 3 or Ld > 3) then
                                                                Ld = 0
                                                                Y[QK] = (Y[QK] - Y[(QK + 2)]);
                                                            else
                                                                break
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        else
                                            if (D >= jM[95]) then
                                                if (D <= jM[95]) then
                                                    if (not (Y[n[124]] ~= Y[n[13]])) then
                                                        dC = dC + 1;
                                                    end;
                                                else
                                                    if not (D ~= jM[116]) then
                                                        Y[n[22]] = Y[n[124]] + ZJ[n[13]];
                                                    else
                                                        Y = {}
                                                    end
                                                end
                                            else
                                                if (D == jM[249] or D > jM[249]) then
                                                    if (D == jM[249] or D < jM[249]) then
                                                        Y[n[22]] = 124;
                                                    else
                                                        Y[n[22]] = (Y[n[124]] - Y[n[13]]);
                                                    end
                                                else
                                                    Y[n[22]] = b(zP[n[124]], nil);
                                                end
                                            end
                                        end
                                    end
                                else
                                    if (D >= jM[189]) then
                                        if (D < jM[32] or D == jM[32]) then
                                            if (D == 14 or D > 14) then
                                                if (D < 14 or D == 14) then
                                                    Y[n[22]] = ZJ[n[124]] * Y[n[13]];
                                                else
                                                    if not (D == jM[148]) then
                                                        Y[n[22]] = Y;
                                                    else
                                                        local QK, Ld, Yw, Ai
                                                        local zW = 1
                                                        while true do
                                                            if (zW == 1 or zW < 1) then
                                                                if (zW > 0) then
                                                                    zW = 3
                                                                    Yw = n[22]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if (zW == 2 or zW < 2) then
                                                                    zW = 0
                                                                    Ai = (Ai + Yw - 1);
                                                                else
                                                                    if (zW <= 3) then
                                                                        zW = 4
                                                                        QK, Ai = Z(Y[Yw]())
                                                                    else
                                                                        zW = 2
                                                                        M = Yw - 1;
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local zW = 0
                                                        while true do
                                                            if (zW >= 2) then
                                                                if (zW == 2 or zW < 2) then
                                                                    break
                                                                else
                                                                    zW = 2
                                                                    M = Ai;
                                                                end
                                                            else
                                                                if not (zW ~= 1) then
                                                                    zW = 3
                                                                    for vm = Yw, Ai do
                                                                        Ld = Ld + 1;
                                                                        Y[vm] = QK[Ld];
                                                                    end;
                                                                else
                                                                    zW = 1
                                                                    Ld = 0
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if D <= jM[189] then
                                                    local QK = Hk[n[124]];
                                                    Y[n[22]] = QK[1][QK[2]];
                                                else
                                                    if (D > jM[164]) then
                                                        if (Y[n[124]] == ZJ[n[13]] or Y[n[124]] > ZJ[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        Y[n[22]] = Y[n[124]][n[13]];
                                                    end
                                                end
                                            end
                                        else
                                            if D >= jM[105] then
                                                if (D <= jM[105]) then
                                                    local QK = n
                                                    Y[n[22]] = function()
                                                        return QK[22]
                                                    end;
                                                else
                                                    if (D <= jM[178]) then
                                                        Y[n[22]] = (Y[n[124]] / ZJ[n[13]]);
                                                    else
                                                        local QK = Y[n[124]];
                                                        if not QK then
                                                            dC = dC + 1;
                                                        else
                                                            Y[n[22]] = QK;
                                                            dC = (dC + s[(dC + 1)][124]) + 1;
                                                        end;
                                                    end
                                                end
                                            else
                                                if (D == 17 or D < 17) then
                                                    Y[n[22]] = (ZJ[n[124]] ^ ZJ[n[13]]);
                                                else
                                                    if not (D == jM[133]) then
                                                        for QK = n[22], n[124] do
                                                            Y[QK] = nil;
                                                        end;
                                                    else
                                                        local QK, Ld
                                                        local Yw = 3
                                                        while true do
                                                            if (Yw == 2 or Yw > 2) then
                                                                if (Yw >= 3) then
                                                                    if (Yw ~= 3) then
                                                                        Yw = 0
                                                                        QK = Y[n[124]]
                                                                    else
                                                                        Yw = 4
                                                                        Ld = n[22]
                                                                    end
                                                                else
                                                                    Yw = 1
                                                                    Y[Ld] = QK[Y[n[13]]];
                                                                end
                                                            else
                                                                if (Yw >= 1) then
                                                                    break
                                                                else
                                                                    Yw = 2
                                                                    Y[(Ld + 1)] = QK;
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D >= jM[248]) then
                                            if D >= 8 then
                                                if (D == 9 or D > 9) then
                                                    if not (D ~= 9) then
                                                        if (not (ZJ[n[124]] ~= ZJ[n[13]])) then
                                                            dC = (dC + 1);
                                                        end;
                                                    else
                                                        if (ZJ[n[124]] == ZJ[n[13]] or ZJ[n[124]] > ZJ[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                else
                                                    tU = Y[n[22]]
                                                end
                                            else
                                                if D >= 6 then
                                                    if (D == 6 or D < 6) then
                                                        local QK, Ld, Yw, Yw, Ai, zW
                                                        local vm = 2
                                                        while true do
                                                            if (vm <= 1) then
                                                                if not (vm == 0) then
                                                                    vm = 0
                                                                    QK = {}
                                                                else
                                                                    vm = 4
                                                                    Ai = 0
                                                                end
                                                            else
                                                                if (vm < 2 or vm == 2) then
                                                                    vm = 1
                                                                    Yw = n[13]
                                                                else
                                                                    if (vm ~= 4) then
                                                                        break
                                                                    else
                                                                        vm = 3
                                                                        zW = ((Yw + n[22]) - 1)
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local vm = 3
                                                        while true do
                                                            if (vm == 1 or vm < 1) then
                                                                if not (vm == 1) then
                                                                    vm = 4
                                                                    Ld = { Y[Yw](H(QK, 1, (zW - Yw))) }
                                                                else
                                                                    vm = 2
                                                                    Ai = 0;
                                                                end
                                                            else
                                                                if vm <= 2 then
                                                                    break
                                                                else
                                                                    if (vm <= 3) then
                                                                        vm = 0
                                                                        for nR = (Yw + 1), zW do
                                                                            Ai = (Ai + 1);
                                                                            QK[Ai] = Y[nR];
                                                                        end;
                                                                    else
                                                                        vm = 1
                                                                        zW = ((Yw + n[124]) - 2)
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local QK = 0
                                                        while true do
                                                            if (QK <= 0) then
                                                                QK = 2
                                                                for vm = Yw, zW do
                                                                    Ai = Ai + 1;
                                                                    Y[vm] = Ld[Ai];
                                                                end;
                                                            else
                                                                if not (QK ~= 2) then
                                                                    QK = 1
                                                                    M = zW;
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                    else
                                                        ZJ = bt[2]
                                                    end
                                                else
                                                    m = ((Qz - l) + 1)
                                                end
                                            end
                                        else
                                            if (D <= jM[198]) then
                                                if D < jM[198] then
                                                    local bt, QK, l, Ld
                                                    local Yw = 1
                                                    while true do
                                                        if Yw <= 1 then
                                                            if Yw ~= 1 then
                                                                Yw = 3
                                                                Ld = 0
                                                            else
                                                                Yw = 4
                                                                bt = n[124]
                                                            end
                                                        else
                                                            if (Yw < 2 or Yw == 2) then
                                                                break
                                                            else
                                                                if not (Yw == 3) then
                                                                    Yw = 0
                                                                    l = {}
                                                                else
                                                                    Yw = 2
                                                                    QK = ((bt + n[22]) - 1)
                                                                end
                                                            end
                                                        end
                                                    end
                                                    local Yw = 0
                                                    while true do
                                                        if (Yw < 1 or Yw == 1) then
                                                            if not (Yw == 1) then
                                                                Yw = 2
                                                                for Ai = (bt + 1), QK do
                                                                    Ld = (Ld + 1);
                                                                    l[Ld] = Y[Ai];
                                                                end;
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if Yw > 2 then
                                                                Yw = 1
                                                                M = bt;
                                                            else
                                                                Yw = 3
                                                                Y[bt](H(l, 1, (QK - bt)));
                                                            end
                                                        end
                                                    end
                                                else
                                                    Y[n[22]] = {};
                                                end
                                            else
                                                if (D >= jM[55]) then
                                                    if (D < jM[55] or D == jM[55]) then
                                                        if (ZJ[n[124]] == Y[n[13]] or ZJ[n[124]] > Y[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    else
                                                        M = n[22];
                                                    end
                                                else
                                                    JM = {}
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        else
                            if (D == jM[214] or D > jM[214]) then
                                if (D >= 167) then
                                    if (D >= jM[165]) then
                                        if D >= 185 then
                                            if (D <= jM[163]) then
                                                if (D > jM[139] or D == jM[139]) then
                                                    if not (D ~= jM[139]) then
                                                        Y[n[22]] = (ZJ[n[124]] % Y[n[13]]);
                                                    else
                                                        local bt, QK, l, Ld
                                                        local Yw = 2
                                                        while true do
                                                            if (Yw < 1 or Yw == 1) then
                                                                if (Yw == 0 or Yw < 0) then
                                                                    Yw = 4
                                                                    QK = (s[dC][179] - 1) * 50
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if Yw <= 2 then
                                                                    Yw = 3
                                                                    Ld = n[22]
                                                                else
                                                                    if not (Yw ~= 3) then
                                                                        Yw = 0
                                                                        dC = (dC + 1);
                                                                    else
                                                                        Yw = 1
                                                                        l = Y[Ld]
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local Yw = 2
                                                        while true do
                                                            if (Yw == 1 or Yw > 1) then
                                                                if (Yw >= 2) then
                                                                    Yw = 0
                                                                    bt = n[124]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                Yw = 1
                                                                for Yw = 1, bt do
                                                                    l[(QK + Yw)] = Y[(Ld + Yw)]
                                                                end;
                                                            end
                                                        end
                                                    end
                                                else
                                                    local bt, bt, QK, l, Ld, Yw
                                                    local Ai = 1
                                                    while true do
                                                        if (Ai >= 2) then
                                                            if (Ai >= 3) then
                                                                if not (Ai ~= 3) then
                                                                    Ai = 2
                                                                    bt = {}
                                                                else
                                                                    Ai = 0
                                                                    Ld = (l + n[22]) - 1
                                                                end
                                                            else
                                                                Ai = 4
                                                                QK = 0
                                                            end
                                                        else
                                                            if not (Ai ~= 0) then
                                                                break
                                                            else
                                                                Ai = 3
                                                                l = n[13]
                                                            end
                                                        end
                                                    end
                                                    local Ai = 4
                                                    while true do
                                                        if (Ai == 1 or Ai < 1) then
                                                            if (Ai > 0) then
                                                                Ai = 0
                                                                QK = 0;
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if (Ai == 2 or Ai < 2) then
                                                                Ai = 3
                                                                Yw = { Y[l](H(bt, 1, Ld - l)) }
                                                            else
                                                                if (Ai < 4) then
                                                                    Ai = 1
                                                                    Ld = (l + n[124] - 2)
                                                                else
                                                                    Ai = 2
                                                                    for Ai = (l + 1), Ld do
                                                                        QK = QK + 1;
                                                                        bt[QK] = Y[Ai];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    end
                                                    local bt = 1
                                                    while true do
                                                        if (bt == 0 or bt < 0) then
                                                            bt = 2
                                                            M = Ld;
                                                        else
                                                            if (bt > 2 or bt == 2) then
                                                                break
                                                            else
                                                                bt = 0
                                                                for bt = l, Ld do
                                                                    QK = (QK + 1);
                                                                    Y[bt] = Yw[QK];
                                                                end;
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if (D > 189 or D == 189) then
                                                    if (D > 189) then
                                                        Y[n[22]] = s;
                                                    else
                                                        Y[n[13]][ZJ[n[22]]] = ZJ[n[124]];
                                                    end
                                                else
                                                    Y[n[13]][ZJ[n[22]]] = ZJ[n[124]];
                                                end
                                            end
                                        else
                                            if (D == 182 or D > 182) then
                                                if (D == 182 or D < 182) then
                                                    local bt, QK
                                                    local l = 1
                                                    while true do
                                                        if (l <= 1) then
                                                            if (l > 0) then
                                                                l = 3
                                                                bt = n[22]
                                                            else
                                                                l = 4
                                                                Y[bt] = QK[ZJ[n[13]]];
                                                            end
                                                        else
                                                            if (l >= 3) then
                                                                if (l < 4) then
                                                                    l = 2
                                                                    QK = Y[n[124]]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                l = 0
                                                                Y[(bt + 1)] = QK;
                                                            end
                                                        end
                                                    end
                                                else
                                                    if not (D == 184) then
                                                        Y[n[13]] = ZJ[n[22]] / ZJ[n[124]];
                                                    else
                                                        local bt, QK, l, l, Ld, Yw
                                                        local Ai = 2
                                                        while true do
                                                            if (Ai < 1 or Ai == 1) then
                                                                if not (Ai ~= 1) then
                                                                    break
                                                                else
                                                                    Ai = 1
                                                                    l = ((QK + n[124]) - 1)
                                                                end
                                                            else
                                                                if (Ai == 2 or Ai < 2) then
                                                                    Ai = 3
                                                                    QK = n[22]
                                                                else
                                                                    if (Ai > 3) then
                                                                        Ai = 0
                                                                        bt = 0
                                                                    else
                                                                        Ai = 4
                                                                        Yw = {}
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local Ai = 1
                                                        while true do
                                                            if (Ai >= 2) then
                                                                if (Ai <= 2) then
                                                                    break
                                                                else
                                                                    if Ai ~= 3 then
                                                                        Ai = 0
                                                                        Ld = { Y[QK](H(Yw, 1, l - QK)) }
                                                                    else
                                                                        Ai = 2
                                                                        bt = 0;
                                                                    end
                                                                end
                                                            else
                                                                if Ai > 0 then
                                                                    Ai = 4
                                                                    for zW = QK + 1, l do
                                                                        bt = bt + 1;
                                                                        Yw[bt] = Y[zW];
                                                                    end;
                                                                else
                                                                    Ai = 3
                                                                    l = (QK + n[13] - 2)
                                                                end
                                                            end
                                                        end
                                                        local Yw = 0
                                                        while true do
                                                            if (Yw <= 0) then
                                                                Yw = 2
                                                                for Ai = QK, l do
                                                                    bt = bt + 1;
                                                                    Y[Ai] = Ld[bt];
                                                                end;
                                                            else
                                                                if Yw > 1 then
                                                                    Yw = 1
                                                                    M = l;
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if (D == 180 or D > 180) then
                                                    if (D <= 180) then
                                                        if (ZJ[n[124]] == Y[n[13]] or ZJ[n[124]] < Y[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        local bt, bt, QK, l, Ld, Yw
                                                        local Ai = 1
                                                        while true do
                                                            if (Ai > 2 or Ai == 2) then
                                                                if (Ai == 2 or Ai < 2) then
                                                                    Ai = 4
                                                                    Yw = ((l + n[22]) - 1)
                                                                else
                                                                    if Ai < 4 then
                                                                        Ai = 2
                                                                        Ld = 0
                                                                    else
                                                                        break
                                                                    end
                                                                end
                                                            else
                                                                if (Ai <= 0) then
                                                                    Ai = 3
                                                                    bt = {}
                                                                else
                                                                    Ai = 0
                                                                    l = n[13]
                                                                end
                                                            end
                                                        end
                                                        local Ai = 3
                                                        while true do
                                                            if (Ai == 2 or Ai > 2) then
                                                                if (Ai <= 2) then
                                                                    break
                                                                else
                                                                    if not (Ai == 3) then
                                                                        Ai = 0
                                                                        Yw = l + n[124] - 2
                                                                    else
                                                                        Ai = 1
                                                                        for zW = l + 1, Yw do
                                                                            Ld = (Ld + 1);
                                                                            bt[Ld] = Y[zW];
                                                                        end;
                                                                    end
                                                                end
                                                            else
                                                                if Ai > 0 then
                                                                    Ai = 4
                                                                    QK = { Y[l](H(bt, 1, (Yw - l))) }
                                                                else
                                                                    Ai = 2
                                                                    Ld = 0;
                                                                end
                                                            end
                                                        end
                                                        local bt = 0
                                                        while true do
                                                            if (bt == 0 or bt < 0) then
                                                                bt = 1
                                                                for Ai = l, Yw do
                                                                    Ld = (Ld + 1);
                                                                    Y[Ai] = QK[Ld];
                                                                end;
                                                            else
                                                                if not (bt ~= 2) then
                                                                    break
                                                                else
                                                                    bt = 2
                                                                    M = Yw;
                                                                end
                                                            end
                                                        end
                                                    end
                                                else
                                                    local bt, QK, l, Ld
                                                    local Yw = 1
                                                    while true do
                                                        if (Yw == 1 or Yw < 1) then
                                                            if not (Yw == 1) then
                                                                Yw = 4
                                                                Ld = {}
                                                            else
                                                                Yw = 0
                                                                bt = n[13]
                                                            end
                                                        else
                                                            if (Yw > 3 or Yw == 3) then
                                                                if not (Yw ~= 4) then
                                                                    Yw = 3
                                                                    l = 0
                                                                else
                                                                    Yw = 2
                                                                    QK = ((bt + n[22]) - 1)
                                                                end
                                                            else
                                                                break
                                                            end
                                                        end
                                                    end
                                                    local Yw = 0
                                                    while true do
                                                        if (Yw == 1 or Yw < 1) then
                                                            if not (Yw == 1) then
                                                                Yw = 2
                                                                for Ai = (bt + 1), QK do
                                                                    l = (l + 1);
                                                                    Ld[l] = Y[Ai];
                                                                end;
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if Yw > 2 then
                                                                Yw = 1
                                                                M = bt;
                                                            else
                                                                Yw = 3
                                                                Y[bt](H(Ld, 1, QK - bt));
                                                            end
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D == 173 or D > 173) then
                                            if (D > jM[44] or D == jM[44]) then
                                                if (D <= jM[44]) then
                                                    if (Y[n[124]] < ZJ[n[13]]) then
                                                        dC = (dC + 1);
                                                    end;
                                                else
                                                    if not (D ~= 178) then
                                                        local bt, QK
                                                        local l = 4
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if (l == 2 or l < 2) then
                                                                    break
                                                                else
                                                                    if (l < 3 or l == 3) then
                                                                        l = 0
                                                                        QK = Y[n[22]]
                                                                    else
                                                                        l = 3
                                                                        bt = n[13]
                                                                    end
                                                                end
                                                            else
                                                                if (l > 0) then
                                                                    l = 2
                                                                    Y[bt] = QK[ZJ[n[124]]];
                                                                else
                                                                    l = 1
                                                                    Y[(bt + 1)] = QK;
                                                                end
                                                            end
                                                        end
                                                    else
                                                        if (not (ZJ[n[124]] == Y[n[13]])) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                end
                                            else
                                                if (D > jM[52] or D == jM[52]) then
                                                    if not (D ~= jM[52]) then
                                                        local bt, QK, l, Ld
                                                        local Yw = 0
                                                        while true do
                                                            if (Yw < 1 or Yw == 1) then
                                                                if not (Yw == 0) then
                                                                    Yw = 2
                                                                    bt = {}
                                                                else
                                                                    Yw = 1
                                                                    Ld = n[22]
                                                                end
                                                            else
                                                                if (Yw > 3 or Yw == 3) then
                                                                    if (Yw <= 3) then
                                                                        Yw = 4
                                                                        QK = (Ld + n[124] - 1)
                                                                    else
                                                                        break
                                                                    end
                                                                else
                                                                    Yw = 3
                                                                    l = 0
                                                                end
                                                            end
                                                        end
                                                        local Yw = 1
                                                        while true do
                                                            if (Yw == 2 or Yw > 2) then
                                                                if (Yw == 3 or Yw > 3) then
                                                                    Yw = 2
                                                                    Y[Ld](H(bt, 1, (QK - Ld)));
                                                                else
                                                                    Yw = 0
                                                                    M = Ld;
                                                                end
                                                            else
                                                                if (Yw < 1) then
                                                                    break
                                                                else
                                                                    Yw = 3
                                                                    for Yw = (Ld + 1), QK do
                                                                        l = l + 1;
                                                                        bt[l] = Y[Yw];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    else
                                                        local bt = Y[n[124]]
                                                        for QK, QK in pairs(Y[n[22]]) do
                                                            bt[(#bt + 1)] = QK
                                                        end;
                                                    end
                                                else
                                                    Y[n[22]] = H;
                                                end
                                            end
                                        else
                                            if (D == jM[38] or D < jM[38]) then
                                                if (D == jM[223] or D > jM[223]) then
                                                    if not (D ~= jM[38]) then
                                                        if Y[n[22]] then
                                                            dC = (dC + 1);
                                                        else
                                                            dC = dC + n[124];
                                                        end;
                                                    else
                                                        Y[n[22]][n[124]] = n[13];
                                                    end
                                                else
                                                    Y[n[22]] = (ZJ[n[124]] / ZJ[n[13]]);
                                                end
                                            else
                                                if (D == jM[232] or D < jM[232]) then
                                                    Y[n[124]] = Y[n[22]][ZJ[n[13]]];
                                                else
                                                    if (D ~= jM[184]) then
                                                        local bt, QK, l, l, Ld, Yw
                                                        local Ai = 3
                                                        while true do
                                                            if (Ai == 2 or Ai > 2) then
                                                                if (Ai <= 2) then
                                                                    Ai = 4
                                                                    l = ((QK + n[22]) - 1)
                                                                else
                                                                    if (Ai < 3 or Ai == 3) then
                                                                        Ai = 0
                                                                        QK = n[13]
                                                                    else
                                                                        break
                                                                    end
                                                                end
                                                            else
                                                                if not (Ai ~= 1) then
                                                                    Ai = 2
                                                                    Ld = 0
                                                                else
                                                                    Ai = 1
                                                                    Yw = {}
                                                                end
                                                            end
                                                        end
                                                        local Ai = 4
                                                        while true do
                                                            if (Ai <= 1) then
                                                                if not (Ai ~= 1) then
                                                                    Ai = 3
                                                                    l = (QK + n[124]) - 2
                                                                else
                                                                    Ai = 1
                                                                    bt = { Y[QK](H(Yw, 1, (l - QK))) }
                                                                end
                                                            else
                                                                if (Ai > 3 or Ai == 3) then
                                                                    if not (Ai == 4) then
                                                                        Ai = 2
                                                                        Ld = 0;
                                                                    else
                                                                        Ai = 0
                                                                        for Ai = (QK + 1), l do
                                                                            Ld = (Ld + 1);
                                                                            Yw[Ld] = Y[Ai];
                                                                        end;
                                                                    end
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                        local Yw = 2
                                                        while true do
                                                            if (Yw == 1 or Yw > 1) then
                                                                if (Yw <= 1) then
                                                                    break
                                                                else
                                                                    Yw = 0
                                                                    for Ai = QK, l do
                                                                        Ld = Ld + 1;
                                                                        Y[Ai] = bt[Ld];
                                                                    end;
                                                                end
                                                            else
                                                                Yw = 1
                                                                M = l;
                                                            end
                                                        end
                                                    else
                                                        M = -1
                                                    end
                                                end
                                            end
                                        end
                                    end
                                else
                                    if (D <= jM[225]) then
                                        if (D < 148 or D == 148) then
                                            if (D == jM[222] or D < jM[222]) then
                                                if (D < jM[214] or D == jM[214]) then
                                                    local bt, QK, l, Ld
                                                    local Yw = 4
                                                    while true do
                                                        if (Yw < 1 or Yw == 1) then
                                                            if (Yw > 1 or Yw == 1) then
                                                                Yw = 0
                                                                l = {}
                                                            else
                                                                Yw = 2
                                                                QK = 0
                                                            end
                                                        else
                                                            if (Yw == 3 or Yw > 3) then
                                                                if Yw > 3 then
                                                                    Yw = 1
                                                                    Ld = n[13]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                Yw = 3
                                                                bt = (Ld + n[22] - 1)
                                                            end
                                                        end
                                                    end
                                                    local Yw = 0
                                                    while true do
                                                        if (Yw == 2 or Yw > 2) then
                                                            if not (Yw == 2) then
                                                                break
                                                            else
                                                                Yw = 3
                                                                M = Ld;
                                                            end
                                                        else
                                                            if not (Yw == 0) then
                                                                Yw = 2
                                                                Y[Ld](H(l, 1, bt - Ld));
                                                            else
                                                                Yw = 1
                                                                for Yw = (Ld + 1), bt do
                                                                    QK = (QK + 1);
                                                                    l[QK] = Y[Yw];
                                                                end;
                                                            end
                                                        end
                                                    end
                                                else
                                                    if (D > jM[222] or D == jM[222]) then
                                                        if (Y[n[124]] > Y[n[13]] or Y[n[124]] == Y[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        local bt = n
                                                        Y[n[22]] = function()
                                                            return bt[22]
                                                        end;
                                                    end
                                                end
                                            else
                                                if (D < 146 or D == 146) then
                                                    local bt, QK, QK, l, Ld, Yw
                                                    local Ai = 4
                                                    while true do
                                                        if (Ai > 2 or Ai == 2) then
                                                            if (Ai == 3 or Ai > 3) then
                                                                if not (Ai == 3) then
                                                                    Ai = 0
                                                                    Yw = n[13]
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                Ai = 3
                                                                l = Yw + n[22] - 1
                                                            end
                                                        else
                                                            if not (Ai == 1) then
                                                                Ai = 1
                                                                QK = {}
                                                            else
                                                                Ai = 2
                                                                bt = 0
                                                            end
                                                        end
                                                    end
                                                    local Ai = 2
                                                    while true do
                                                        if (Ai > 2 or Ai == 2) then
                                                            if (Ai == 2 or Ai < 2) then
                                                                Ai = 3
                                                                for zW = Yw + 1, l do
                                                                    bt = (bt + 1);
                                                                    QK[bt] = Y[zW];
                                                                end;
                                                            else
                                                                if not (Ai == 4) then
                                                                    Ai = 1
                                                                    Ld = { Y[Yw](H(QK, 1, (l - Yw))) }
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        else
                                                            if not (Ai ~= 0) then
                                                                Ai = 4
                                                                bt = 0;
                                                            else
                                                                Ai = 0
                                                                l = ((Yw + n[124]) - 2)
                                                            end
                                                        end
                                                    end
                                                    local QK = 1
                                                    while true do
                                                        if (QK < 0 or QK == 0) then
                                                            break
                                                        else
                                                            if (QK ~= 2) then
                                                                QK = 2
                                                                for Ai = Yw, l do
                                                                    bt = (bt + 1);
                                                                    Y[Ai] = Ld[bt];
                                                                end;
                                                            else
                                                                QK = 0
                                                                M = l;
                                                            end
                                                        end
                                                    end
                                                else
                                                    if not (D == jM[92]) then
                                                        local bt, QK
                                                        local l = 1
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if l <= 2 then
                                                                    l = 3
                                                                    bt = {}
                                                                else
                                                                    if (l == 4) then
                                                                        l = 0
                                                                        Y[n[22]] = b(QK, bt);
                                                                    else
                                                                        l = 4
                                                                        for b = 1, n[13], 1 do
                                                                            dC = (dC + 1);
                                                                            local Ld = s[dC];
                                                                            if (Ld[191] == 54) then
                                                                                bt[b - 1] = { Y, Ld[124] };
                                                                            else
                                                                                bt[(b - 1)] = Hk[Ld[124]]
                                                                            end;
                                                                            JM[((#JM) + 1)] = bt;
                                                                        end;
                                                                    end
                                                                end
                                                            else
                                                                if (l == 1 or l > 1) then
                                                                    l = 2
                                                                    QK = zP[n[124]]
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                    else
                                                        dC = (dC + n[124]);
                                                    end
                                                end
                                            end
                                        else
                                            if (D == 152 or D > 152) then
                                                if (D > 153 or D == 153) then
                                                    if not (D ~= 153) then
                                                        if (not (Y[n[124]] ~= ZJ[n[13]])) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        if (not (Y[n[124]] == Y[n[13]])) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                else
                                                    local bt
                                                    local QK = 2
                                                    while true do
                                                        if (QK == 2 or QK > 2) then
                                                            if not (QK == 3) then
                                                                QK = 1
                                                                bt = n[124]
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if QK == 0 then
                                                                QK = 3
                                                                for Hk = bt, M do
                                                                    local b = uS[(Hk - bt)];
                                                                    Y[Hk] = b;
                                                                end;
                                                            else
                                                                QK = 0
                                                                M = (bt + m - 1);
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if (D == jM[242] or D < jM[242]) then
                                                    d = { ... }
                                                else
                                                    if D < jM[205] then
                                                        local bt, QK, Hk, b
                                                        local l = 3
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if (l >= 3) then
                                                                    if not (l ~= 4) then
                                                                        break
                                                                    else
                                                                        l = 0
                                                                        QK = n[22]
                                                                    end
                                                                else
                                                                    l = 4
                                                                    b = 0
                                                                end
                                                            else
                                                                if not (l == 1) then
                                                                    l = 1
                                                                    Hk, bt = { Y[QK]() }
                                                                else
                                                                    l = 2
                                                                    bt = (QK + n[13]) - 2
                                                                end
                                                            end
                                                        end
                                                        local l = 1
                                                        while true do
                                                            if (l <= 0) then
                                                                break
                                                            else
                                                                if (l ~= 1) then
                                                                    l = 0
                                                                    M = bt;
                                                                else
                                                                    l = 2
                                                                    for l = QK, bt do
                                                                        b = (b + 1);
                                                                        Y[l] = Hk[b];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = dC;
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D < jM[96] or D == jM[96]) then
                                            if (D == 158 or D > 158) then
                                                if (D == 158 or D < 158) then
                                                    Y[n[22]] = s[dC + n[124]];
                                                else
                                                    if (D == 159 or D < 159) then
                                                        Y[n[22]] = u;
                                                    else
                                                        Y[n[22]] = (ZJ[n[124]] % ZJ[n[13]]);
                                                    end
                                                end
                                            else
                                                if (D > 156 or D == 156) then
                                                    if D ~= 156 then
                                                        Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                    else
                                                        Y[n[22]] = Jh;
                                                    end
                                                else
                                                    Y[n[124]][ZJ[n[22]]] = ZJ[n[13]];
                                                end
                                            end
                                        else
                                            if (D > jM[6] or D == jM[6]) then
                                                if (D <= jM[6]) then
                                                    Y[n[22]] = 22;
                                                else
                                                    if not (D == jM[126]) then
                                                        local bt, QK
                                                        local Hk = 0
                                                        while true do
                                                            if (Hk == 2 or Hk > 2) then
                                                                if not (Hk == 2) then
                                                                    break
                                                                else
                                                                    Hk = 3
                                                                    for b = QK, ((QK + bt) - 1) do
                                                                        Y[b] = uS[(b - QK)];
                                                                    end;
                                                                end
                                                            else
                                                                if (Hk < 1) then
                                                                    Hk = 1
                                                                    QK = n[22]
                                                                else
                                                                    Hk = 2
                                                                    bt = n[124]
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = false;
                                                    end
                                                end
                                            else
                                                if (D > jM[113] or D == jM[113]) then
                                                    if (D > jM[113]) then
                                                        Y[n[13]][ZJ[n[22]]] = Y[n[124]];
                                                    else
                                                        Y[n[22]] = n[124];
                                                    end
                                                else
                                                    Y[n[22]] = 191;
                                                end
                                            end
                                        end
                                    end
                                end
                            else
                                if (D >= jM[7]) then
                                    if (D <= jM[117]) then
                                        if (D == 125 or D > 125) then
                                            if D <= jM[226] then
                                                if (D == 126 or D > 126) then
                                                    if (D > 126) then
                                                        n[22] = M;
                                                    else
                                                        Y[n[22]] = (ZJ[n[124]] + Y[n[13]]);
                                                    end
                                                else
                                                    Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                end
                                            else
                                                if (D <= jM[211]) then
                                                    Qz = W('#', ...) - 1
                                                else
                                                    if not (D ~= jM[117]) then
                                                        Y[n[22]] = ZJ[n[124]] - Y[n[13]];
                                                    else
                                                        Y[n[13]][ZJ[n[22]]] = ZJ[n[124]];
                                                    end
                                                end
                                            end
                                        else
                                            if (D < 121 or D == 121) then
                                                if (D == jM[7] or D < jM[7]) then
                                                    local bt, QK, Hk, b
                                                    local l = 1
                                                    while true do
                                                        if (l == 2 or l > 2) then
                                                            if l <= 2 then
                                                                l = 4
                                                                b = 0
                                                            else
                                                                if not (l == 3) then
                                                                    l = 0
                                                                    Hk = ((bt + n[22]) - 1)
                                                                else
                                                                    l = 2
                                                                    QK = {}
                                                                end
                                                            end
                                                        else
                                                            if not (l ~= 0) then
                                                                break
                                                            else
                                                                l = 3
                                                                bt = n[13]
                                                            end
                                                        end
                                                    end
                                                    local l = 2
                                                    while true do
                                                        if (l >= 2) then
                                                            if not (l == 3) then
                                                                l = 0
                                                                for zP = (bt + 1), Hk do
                                                                    b = (b + 1);
                                                                    QK[b] = Y[zP];
                                                                end;
                                                            else
                                                                l = 1
                                                                M = bt;
                                                            end
                                                        else
                                                            if l <= 0 then
                                                                l = 3
                                                                Y[bt](H(QK, 1, (Hk - bt)));
                                                            else
                                                                break
                                                            end
                                                        end
                                                    end
                                                else
                                                    if not (D == 120) then
                                                        Y[n[22]] = Y[n[124]] * Y[n[13]];
                                                    else
                                                        tU[ZJ[n[124]]] = Y[n[22]];
                                                    end
                                                end
                                            else
                                                if (D == 122 or D < 122) then
                                                    local bt, QK
                                                    local Hk = 2
                                                    while true do
                                                        if (Hk < 1 or Hk == 1) then
                                                            if Hk <= 0 then
                                                                break
                                                            else
                                                                Hk = 0
                                                                for b = 1, #JM do
                                                                    local b = JM[b];
                                                                    for l = 0, #b do
                                                                        local b = b[l];
                                                                        local l = b[1];
                                                                        local zP = b[2];
                                                                        if not (l ~= Y) and (zP > QK or zP == QK) then
                                                                            bt[zP] = l[zP];
                                                                            b[1] = bt;
                                                                        end;
                                                                    end;
                                                                end;
                                                            end
                                                        else
                                                            if (Hk < 2 or Hk == 2) then
                                                                Hk = 3
                                                                QK = n[22]
                                                            else
                                                                Hk = 1
                                                                bt = {}
                                                            end
                                                        end
                                                    end
                                                else
                                                    if (D > 123) then
                                                        if (Y[n[124]] <= Y[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    else
                                                        Y[n[22]] = (ZJ[n[124]] - ZJ[n[13]]);
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if (D == jM[251] or D > jM[251]) then
                                            if (D >= 140) then
                                                if (D == 141 or D > 141) then
                                                    if not (D == 142) then
                                                        if (ZJ[n[124]] == Y[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    else
                                                        Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                    end
                                                else
                                                    Y[n[22]][Y[n[124]]] = Y[n[13]];
                                                end
                                            else
                                                if (D < jM[251] or D == jM[251]) then
                                                    Y[n[22]] = -Y[n[124]];
                                                else
                                                    if not (D == 139) then
                                                        local bt, QK
                                                        local Hk = 3
                                                        while true do
                                                            if (Hk < 1 or Hk == 1) then
                                                                if not (Hk ~= 1) then
                                                                    Hk = 0
                                                                    bt = Y[n[22]]
                                                                else
                                                                    Hk = 2
                                                                    Y[(QK + 1)] = bt;
                                                                end
                                                            else
                                                                if (Hk == 2 or Hk < 2) then
                                                                    Hk = 4
                                                                    Y[QK] = bt[ZJ[n[124]]];
                                                                else
                                                                    if (Hk < 4) then
                                                                        Hk = 1
                                                                        QK = n[13]
                                                                    else
                                                                        break
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    else
                                                        if (not (Y[n[124]] == ZJ[n[13]])) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                end
                                            end
                                        else
                                            if (D == 134 or D > 134) then
                                                if (D <= 134) then
                                                    if (Y[n[124]] > ZJ[n[13]]) then
                                                        dC = dC + 1;
                                                    end;
                                                else
                                                    if not (D ~= 136) then
                                                        local bt
                                                        local QK = 0
                                                        while true do
                                                            if (QK >= 2) then
                                                                if (QK >= 3) then
                                                                    QK = 1
                                                                    M = (bt + m - 1);
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                if not (QK == 0) then
                                                                    QK = 2
                                                                    for Hk = bt, M do
                                                                        local b = uS[(Hk - bt)];
                                                                        Y[Hk] = b;
                                                                    end;
                                                                else
                                                                    QK = 3
                                                                    bt = n[22]
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = (ZJ[n[124]] + ZJ[n[13]]);
                                                    end
                                                end
                                            else
                                                if (D == 131 or D < 131) then
                                                    Y[n[22]] = ZJ[n[124]];
                                                else
                                                    if (D > 132) then
                                                        if (ZJ[n[124]] ~= ZJ[n[13]]) then
                                                            dC = dC + 1;
                                                        end;
                                                    else
                                                        Y[n[22]][n[124]] = Y[n[13]];
                                                    end
                                                end
                                            end
                                        end
                                    end
                                else
                                    if (D < jM[216] or D == jM[216]) then
                                        if (D == jM[31] or D > jM[31]) then
                                            if (D == jM[244] or D < jM[244]) then
                                                if (D == jM[31] or D < jM[31]) then
                                                    Y[n[13]] = Y[n[22]][ZJ[n[124]]];
                                                else
                                                    if D == jM[244] then
                                                        local bt, QK, Hk, b
                                                        local l = 2
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if (l == 2 or l < 2) then
                                                                    l = 4
                                                                    b = n[22]
                                                                else
                                                                    if l < 4 then
                                                                        l = 0
                                                                        Hk = {}
                                                                    else
                                                                        l = 3
                                                                        bt = b + n[124] - 2
                                                                    end
                                                                end
                                                            else
                                                                if not (l == 0) then
                                                                    break
                                                                else
                                                                    l = 1
                                                                    QK = 0
                                                                end
                                                            end
                                                        end
                                                        local l = 2
                                                        while true do
                                                            if (l < 0 or l == 0) then
                                                                l = 1
                                                                do
                                                                    return H(Hk, 1, QK)
                                                                end;
                                                            else
                                                                if not (l ~= 2) then
                                                                    l = 0
                                                                    for l = b, bt do
                                                                        QK = (QK + 1);
                                                                        Hk[QK] = Y[l];
                                                                    end;
                                                                else
                                                                    break
                                                                end
                                                            end
                                                        end
                                                    else
                                                        local bt, QK, Hk, b
                                                        local l = 0
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if (l == 2 or l < 2) then
                                                                    l = 1
                                                                    QK = {}
                                                                else
                                                                    if (l == 3 or l < 3) then
                                                                        break
                                                                    else
                                                                        l = 3
                                                                        Hk = (b + n[22] - 1)
                                                                    end
                                                                end
                                                            else
                                                                if not (l == 1) then
                                                                    l = 2
                                                                    b = n[13]
                                                                else
                                                                    l = 4
                                                                    bt = 0
                                                                end
                                                            end
                                                        end
                                                        local l = 0
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if not (l ~= 2) then
                                                                    break
                                                                else
                                                                    l = 1
                                                                    Y[b](H(QK, 1, (Hk - b)));
                                                                end
                                                            else
                                                                if (l > 0) then
                                                                    l = 2
                                                                    M = b;
                                                                else
                                                                    l = 3
                                                                    for l = (b + 1), Hk do
                                                                        bt = bt + 1;
                                                                        QK[bt] = Y[l];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    end
                                                end
                                            else
                                                if (D == 105 or D > 105) then
                                                    if not (D == 105) then
                                                        Y[n[22]] = (ZJ[n[124]] * ZJ[n[13]]);
                                                    else
                                                        Y[n[124]][ZJ[n[22]]] = ZJ[n[13]];
                                                    end
                                                else
                                                    local bt, bt, QK, Hk, b, l
                                                    local zP = 4
                                                    while true do
                                                        if (zP <= 1) then
                                                            if (zP <= 0) then
                                                                break
                                                            else
                                                                zP = 2
                                                                Hk = {}
                                                            end
                                                        else
                                                            if (zP > 3 or zP == 3) then
                                                                if (zP == 4 or zP > 4) then
                                                                    zP = 1
                                                                    bt = n[22]
                                                                else
                                                                    zP = 0
                                                                    QK = M
                                                                end
                                                            else
                                                                zP = 3
                                                                l = 0
                                                            end
                                                        end
                                                    end
                                                    local zP = 4
                                                    while true do
                                                        if (zP <= 1) then
                                                            if not (zP ~= 1) then
                                                                zP = 3
                                                                b = { Y[bt](H(Hk, 1, QK - bt)) }
                                                            else
                                                                break
                                                            end
                                                        else
                                                            if (zP == 3 or zP > 3) then
                                                                if not (zP ~= 4) then
                                                                    zP = 1
                                                                    for s = (bt + 1), QK do
                                                                        l = l + 1;
                                                                        Hk[l] = Y[s];
                                                                    end;
                                                                else
                                                                    zP = 2
                                                                    QK = ((bt + n[13]) - 2)
                                                                end
                                                            else
                                                                zP = 0
                                                                l = 0;
                                                            end
                                                        end
                                                    end
                                                    local Hk = 1
                                                    while true do
                                                        if (Hk == 1 or Hk > 1) then
                                                            if (Hk == 2 or Hk > 2) then
                                                                Hk = 0
                                                                M = QK;
                                                            else
                                                                Hk = 2
                                                                for Hk = bt, QK do
                                                                    l = l + 1;
                                                                    Y[Hk] = b[l];
                                                                end;
                                                            end
                                                        else
                                                            break
                                                        end
                                                    end
                                                end
                                            end
                                        else
                                            if (D >= 98) then
                                                if (D <= 98) then
                                                    if not Y[n[22]] then
                                                        dC = dC + 1;
                                                    else
                                                        dC = (dC + n[124]);
                                                    end;
                                                else
                                                    if (D == 99 or D < 99) then
                                                        Y = {};
                                                    else
                                                        do
                                                            return
                                                        end;
                                                    end
                                                end
                                            else
                                                if D >= 96 then
                                                    if D >= 97 then
                                                        local bt, QK, Hk, b
                                                        local l = 1
                                                        while true do
                                                            if (l == 2 or l > 2) then
                                                                if (l < 2 or l == 2) then
                                                                    l = 3
                                                                    Hk = {}
                                                                else
                                                                    if l < 4 then
                                                                        l = 4
                                                                        bt = 0
                                                                    else
                                                                        l = 0
                                                                        QK = ((b + n[22]) - 1)
                                                                    end
                                                                end
                                                            else
                                                                if (l <= 0) then
                                                                    break
                                                                else
                                                                    l = 2
                                                                    b = n[13]
                                                                end
                                                            end
                                                        end
                                                        local l = 1
                                                        while true do
                                                            if (l > 2 or l == 2) then
                                                                if l == 3 then
                                                                    l = 0
                                                                    M = b;
                                                                else
                                                                    l = 3
                                                                    Y[b](H(Hk, 1, (QK - b)));
                                                                end
                                                            else
                                                                if (l == 0 or l < 0) then
                                                                    break
                                                                else
                                                                    l = 2
                                                                    for l = (b + 1), QK do
                                                                        bt = bt + 1;
                                                                        Hk[bt] = Y[l];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = (Y[n[124]] - ZJ[n[13]]);
                                                    end
                                                else
                                                    local bt, bt, QK, Hk, b, l
                                                    local zP = 1
                                                    while true do
                                                        if zP >= 2 then
                                                            if zP >= 3 then
                                                                if (zP > 3) then
                                                                    zP = 3
                                                                    b = 0
                                                                else
                                                                    zP = 0
                                                                    Hk = M
                                                                end
                                                            else
                                                                zP = 4
                                                                l = {}
                                                            end
                                                        else
                                                            if (zP <= 0) then
                                                                break
                                                            else
                                                                zP = 2
                                                                bt = n[22]
                                                            end
                                                        end
                                                    end
                                                    local zP = 3
                                                    while true do
                                                        if (zP <= 1) then
                                                            if (zP < 0 or zP == 0) then
                                                                zP = 4
                                                                QK, Hk = Z(Y[bt](H(l, 1, (Hk - bt))))
                                                            else
                                                                zP = 2
                                                                b = 0;
                                                            end
                                                        else
                                                            if (zP < 2 or zP == 2) then
                                                                break
                                                            else
                                                                if (zP > 3) then
                                                                    zP = 1
                                                                    Hk = Hk + bt - 1;
                                                                else
                                                                    zP = 0
                                                                    for zP = bt + 1, Hk do
                                                                        b = (b + 1);
                                                                        l[b] = Y[zP];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                    end
                                                    local l = 2
                                                    while true do
                                                        if (l > 1 or l == 1) then
                                                            if not (l ~= 2) then
                                                                l = 1
                                                                for zP = bt, Hk do
                                                                    b = b + 1;
                                                                    Y[zP] = QK[b];
                                                                end;
                                                            else
                                                                l = 0
                                                                M = Hk;
                                                            end
                                                        else
                                                            break
                                                        end
                                                    end
                                                end
                                            end
                                        end
                                    else
                                        if D <= 112 then
                                            if (D == 110 or D > 110) then
                                                if D >= 111 then
                                                    if (D ~= 112) then
                                                        local bt, QK, Hk
                                                        local b = 1
                                                        while true do
                                                            if (b == 1 or b < 1) then
                                                                if (b < 0 or b == 0) then
                                                                    b = 2
                                                                    Hk = M
                                                                else
                                                                    b = 4
                                                                    QK = n[22]
                                                                end
                                                            else
                                                                if (b == 3 or b > 3) then
                                                                    if (b > 3) then
                                                                        b = 0
                                                                        bt = {}
                                                                    else
                                                                        break
                                                                    end
                                                                else
                                                                    b = 3
                                                                    for b = (QK + 1), Hk do
                                                                        bt[#bt + 1] = Y[b];
                                                                    end;
                                                                end
                                                            end
                                                        end
                                                        do
                                                            return Y[QK](H(bt, 1, (Hk - QK)))
                                                        end;
                                                    else
                                                        Y[n[22]] = true;
                                                    end
                                                else
                                                    if (ZJ[n[124]] <= ZJ[n[13]]) then
                                                        dC = (dC + 1);
                                                    end;
                                                end
                                            else
                                                if (D >= jM[191]) then
                                                    if not (D == jM[191]) then
                                                        local bt, QK, QK, Hk, b, l
                                                        local zP = 1
                                                        while true do
                                                            if zP <= 1 then
                                                                if not (zP ~= 0) then
                                                                    zP = 2
                                                                    l = 0
                                                                else
                                                                    zP = 4
                                                                    bt = n[22]
                                                                end
                                                            else
                                                                if (zP <= 2) then
                                                                    zP = 3
                                                                    b = ((bt + n[124]) - 1)
                                                                else
                                                                    if (zP == 3 or zP < 3) then
                                                                        break
                                                                    else
                                                                        zP = 0
                                                                        QK = {}
                                                                    end
                                                                end
                                                            end
                                                        end
                                                        local zP = 1
                                                        while true do
                                                            if (zP == 2 or zP > 2) then
                                                                if (zP <= 2) then
                                                                    break
                                                                else
                                                                    if not (zP == 3) then
                                                                        zP = 3
                                                                        Hk, b = Z(Y[bt](H(QK, 1, (b - bt))))
                                                                    else
                                                                        zP = 0
                                                                        b = (b + bt - 1);
                                                                    end
                                                                end
                                                            else
                                                                if (zP == 1) then
                                                                    zP = 4
                                                                    for s = (bt + 1), b do
                                                                        l = (l + 1);
                                                                        QK[l] = Y[s];
                                                                    end;
                                                                else
                                                                    zP = 2
                                                                    l = 0;
                                                                end
                                                            end
                                                        end
                                                        local QK = 0
                                                        while true do
                                                            if (QK >= 1) then
                                                                if (QK ~= 1) then
                                                                    QK = 1
                                                                    M = b;
                                                                else
                                                                    break
                                                                end
                                                            else
                                                                QK = 2
                                                                for QK = bt, b do
                                                                    l = l + 1;
                                                                    Y[QK] = Hk[l];
                                                                end;
                                                            end
                                                        end
                                                    else
                                                        Y[n[22]] = (Y[n[124]] * ZJ[n[13]]);
                                                    end
                                                else
                                                    Y[n[22]] = { unpack({}, 1, n[124]) };
                                                end
                                            end
                                        else
                                            if (D == jM[203] or D > jM[203]) then
                                                if (D == jM[74] or D > jM[74]) then
                                                    if (D > jM[74]) then
                                                        local bt, QK, Hk
                                                        local b = 0
                                                        while true do
                                                            if (b <= 1) then
                                                                if (b > 0) then
                                                                    b = 2
                                                                    bt = Y[Hk]
                                                                else
                                                                    b = 1
                                                                    Hk = n[22]
                                                                end
                                                            else
                                                                if (b < 2 or b == 2) then
                                                                    b = 3
                                                                    QK = (M - Hk)
                                                                else
                                                                    if not (b == 3) then
                                                                        break
                                                                    else
                                                                        b = 4
                                                                        for b = 1, QK do
                                                                            bt[b] = Y[Hk + b]
                                                                        end;
                                                                    end
                                                                end
                                                            end
                                                        end
                                                    else
                                                        do
                                                            return
                                                        end;
                                                    end
                                                else
                                                    if (ZJ[n[124]] < ZJ[n[13]]) then
                                                        dC = dC + 1;
                                                    end;
                                                end
                                            else
                                                if (D < jM[168] or D == jM[168]) then
                                                    local bt, QK, Hk
                                                    local b = 4
                                                    while true do
                                                        if (b == 2 or b > 2) then
                                                            if b <= 2 then
                                                                break
                                                            else
                                                                if not (b == 4) then
                                                                    b = 2
                                                                    for l = (bt + 1), Hk do
                                                                        QK[(#QK + 1)] = Y[l];
                                                                    end;
                                                                else
                                                                    b = 1
                                                                    bt = n[22]
                                                                end
                                                            end
                                                        else
                                                            if (b ~= 0) then
                                                                b = 0
                                                                QK = {}
                                                            else
                                                                b = 3
                                                                Hk = bt + n[124] - 1
                                                            end
                                                        end
                                                    end
                                                    do
                                                        return Y[bt](H(QK, 1, (Hk - bt)))
                                                    end;
                                                else
                                                    if not (D == jM[121]) then
                                                        local bt = n
                                                        Y[n[22]] = function()
                                                            return bt[22]
                                                        end;
                                                    else
                                                        if (Y[n[124]] == ZJ[n[13]] or Y[n[124]] < ZJ[n[13]]) then
                                                            dC = (dC + 1);
                                                        end;
                                                    end
                                                end
                                            end
                                        end
                                    end
                                end
                            end
                        end
                        dC = dC + 1;
                    end;
                end;
            end
        end
    end
end 